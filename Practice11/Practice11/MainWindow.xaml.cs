using Newtonsoft.Json.Linq;
using Newtonsoft.Json;
using Practice11.BudgetDataSetTableAdapters;
using System;
using System.Collections.Generic;
using System.Data;
using System.Windows;
using System.Windows.Forms;
using static System.Windows.Forms.VisualStyles.VisualStyleElement.Window;
using Microsoft.WindowsAPICodePack.Dialogs;
using System.IO;

namespace Practice11
{
    /// <summary>
    /// Логика взаимодействия для MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
        private RecordsTableAdapter _recordsTableAdapter = new RecordsTableAdapter();
        public readonly RecordsTypesTableAdapter RecordsTypesTableAdapter = new RecordsTypesTableAdapter();

        private CreateRecordTypeWindow _createRecordTypeWindow = new CreateRecordTypeWindow();

        public MainWindow()
        {
            InitializeComponent();

            _createRecordTypeWindow.MainWindow = this;

            MainDataGrid.ItemsSource = GetCurrentDateDataRows();
            MainDataGrid.CanUserAddRows = false;
            MainDataGrid.AutoGeneratedColumns += (e, s) =>
            {
                MainDataGrid.Columns[0].Visibility = Visibility.Hidden;
                MainDataGrid.Columns[2].Visibility = Visibility.Hidden;
                MainDataGrid.Columns[6].Visibility = Visibility.Hidden;
            };

            foreach (DataRow row in RecordsTypesTableAdapter.GetData().Rows)
            {
                RecordTypeComboBox.Items.Add(row["Name"]);
            }

            MainDataGrid.BeginningEdit += (s, e) =>
            {
                e.Cancel = true;
            };

            try
            {
                CommonOpenFileDialog dialog = new CommonOpenFileDialog();

                var showRes = dialog.ShowDialog();

                if (showRes == CommonFileDialogResult.Ok)
                {
                    SerializableRecordsTable serializableRecordsTable = JsonConvert.DeserializeObject<SerializableRecordsTable>(File.ReadAllText(dialog.FileName));
                   
                    foreach (JArray obj in serializableRecordsTable.RecordsTypes)
                    {
                        if (RecordsTypesTableAdapter.GetDataByTypeName(obj[1].ToString()).Rows.Count == 0)
                        {
                            RecordsTypesTableAdapter.InsertType(obj[1].ToString());
                        }
                    }
                    

                    foreach (JArray obj in serializableRecordsTable.Records)
                    {
                        if (_recordsTableAdapter.GetRecordByName(obj[1].ToString()).Rows.Count == 0)
                        {
                            _recordsTableAdapter.InsertRecord(obj[1].ToString(),
                                int.Parse(obj[2].ToString()),
                                obj[3].ToString(),
                                int.Parse(obj[4].ToString()),
                                (bool)obj[5],
                                obj[6].ToString());
                        }
                    }
                    
                    MainDataGrid.ItemsSource = GetCurrentDateDataRows();
                }
            } 
            catch(Exception ex)
            {
                System.Windows.MessageBox.Show(ex.Message);
            }
        }

        private void AddRecordTypeButton_Click(object sender, RoutedEventArgs e)
        {
            _createRecordTypeWindow.Show();
        }

        private void AddRecordButton_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                int res;

                if (RecordNameTextBox.Text == "" || RecordTypeComboBox.SelectedItem == null || !int.TryParse(RecordSumTextBox.Text, out res)) return;

                DataTable foundType = RecordsTypesTableAdapter.GetDataByTypeName(RecordTypeComboBox.SelectedItem.ToString());

                BudgetRecord budgetRecord = new BudgetRecord(RecordNameTextBox.Text, foundType.Rows[0]["Name"].ToString(), res, (DateTime) MainDatePicker.SelectedDate);

                _recordsTableAdapter.InsertRecord(budgetRecord.Name, int.Parse(foundType.Rows[0]["TypeID"].ToString()), budgetRecord.TypeName, budgetRecord.Money, budgetRecord.IsIncome, budgetRecord.DateTime.ToString("dd.MM.yyyy"));

                MainDataGrid.ItemsSource = GetCurrentDateDataRows();
            }
            catch(Exception ex) 
            {
                System.Windows.MessageBox.Show(ex.Message);
            }
        }

        private void EditChosenRecordButton_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                int res;

                if (RecordNameTextBox.Text == "" || RecordTypeComboBox.SelectedItem == null || !int.TryParse(RecordSumTextBox.Text, out res) || MainDataGrid.SelectedItem == null) return;

                DataTable foundType = RecordsTypesTableAdapter.GetDataByTypeName(RecordTypeComboBox.SelectedItem.ToString());

                BudgetRecord budgetRecord = new BudgetRecord(RecordNameTextBox.Text, foundType.Rows[0]["Name"].ToString(), res, (DateTime) MainDatePicker.SelectedDate);

                _recordsTableAdapter.UpdateRecordByID(budgetRecord.Name, int.Parse(foundType.Rows[0]["TypeID"].ToString()), budgetRecord.TypeName, budgetRecord.Money, budgetRecord.IsIncome, budgetRecord.DateTime.ToString("dd.MM.yyyy"),
                    (int) ((DataRowView)MainDataGrid.SelectedItem).Row["RecordID"]);

                int selectedIdx = MainDataGrid.SelectedIndex;

                MainDataGrid.ItemsSource = GetCurrentDateDataRows();

                MainDataGrid.SelectedIndex = selectedIdx;
            }
            catch (Exception ex)
            {
                System.Windows.MessageBox.Show(ex.Message);
            }
        }

        private void DeleteChosenRecordButton_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                foreach (DataRowView drv in MainDataGrid.SelectedItems)
                {
                    _recordsTableAdapter.DeleteRecordByID((int)drv.Row[0]);
                }
            }
            catch (Exception ex)
            {
                System.Windows.MessageBox.Show(ex.Message);
            }

            MainDataGrid.ItemsSource = GetCurrentDateDataRows();
        }

        private DataView GetCurrentDateDataRows()
        {
            DataTable found = new DataTable();

            foreach (DataColumn dc in _recordsTableAdapter.GetData().Columns)
            {
                found.Columns.Add(dc.ColumnName, dc.DataType);
            }

            for (int i = 0; i < _recordsTableAdapter.GetData().Count; i++)
            {
                DataRow dataRow = _recordsTableAdapter.GetData()[i];

                if (dataRow["Date"].ToString() == ((DateTime) MainDatePicker.SelectedDate).ToString("dd.MM.yyyy"))
                {
                    found.Rows.Add(dataRow["RecordID"], dataRow["Name"], dataRow["TypeID"], dataRow["TypeName"], dataRow["Money"], dataRow["IsIncome"], dataRow["Date"]);
                }
            }

            UpdateResultMoney();

            return found.DefaultView;
        }

        private void MainDatePicker_SelectedDateChanged(object sender, System.Windows.Controls.SelectionChangedEventArgs e)
        {
            if (MainDataGrid != null)
            {
                MainDataGrid.ItemsSource = GetCurrentDateDataRows();
            }
        }

        private void MainDataGrid_SelectionChanged(object sender, System.Windows.Controls.SelectionChangedEventArgs e)
        {
            if (MainDataGrid.SelectedItem != null)
            {
                RecordNameTextBox.Text = (MainDataGrid.SelectedItem as DataRowView)["Name"].ToString();
                RecordTypeComboBox.SelectedItem = (MainDataGrid.SelectedItem as DataRowView)["TypeName"].ToString();
                RecordSumTextBox.Text = (MainDataGrid.SelectedItem as DataRowView)["Money"] + "";
            }
        }

        private void UpdateResultMoney()
        {
            int resMoney = 0;
            foreach(DataRow dataRow in _recordsTableAdapter.GetData())
            {
                resMoney += int.Parse(dataRow["Money"].ToString()) * (((bool) dataRow["IsIncome"]) ? 1 : -1);
            }

            ResultTextBlock.Text = resMoney.ToString();
        }

        private void Window_Closing(object sender, System.ComponentModel.CancelEventArgs e)
        {
            try
            {
                _createRecordTypeWindow.Close();
                SerializableRecordsTable serializableRecordsTable = new SerializableRecordsTable(_recordsTableAdapter, RecordsTypesTableAdapter);
                Utils.SerializeData(_recordsTableAdapter.GetData().TableName, serializableRecordsTable);
            }
            catch(Exception ex)
            {
                System.Windows.MessageBox.Show(ex.StackTrace + "\n" + ex.Message);
            }
        }
    }
}
